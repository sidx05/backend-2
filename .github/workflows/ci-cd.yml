name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18.x'

jobs:
  # Frontend Testing and Build
  frontend-test-build:
    name: Frontend - Test & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run TypeScript check
      run: npm run type-check

    - name: Run frontend tests
      run: npm test
      env:
        CI: true

    - name: Build frontend
      run: npm run build
      env:
        NEXT_TELEMETRY_DISABLED: 1

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: .next
        retention-days: 7

  # Security Scanning
  security-scan:
    name: Security - Scan
    runs-on: ubuntu-latest
    needs: frontend-test-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript, typescript

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  # Deploy to Production (Vercel)
  deploy-production:
    name: Deploy - Production
    runs-on: ubuntu-latest
    needs: [frontend-test-build, security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build
      env:
        NEXT_TELEMETRY_DISABLED: 1

    - name: Deploy to Vercel
      if: env.VERCEL_TOKEN != ''
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./
        prod: true

    - name: Notify deployment
      run: echo "Frontend deployment completed successfully"